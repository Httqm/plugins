#!/bin/bash

######################################### check_mysql_db_size #######################################
# FUNCTION :	Return the total number of MySQL processes (+alerts on thresholds),
#				and the number of sleeping connections (for graph only)
#
# AUTHOR :		Matthieu FOURNET (matthieu.fournet@orange.com)
# LICENSE :		GPL - http://www.fsf.org/licenses/gpl.txt
#
# NOTES :		1. No need to add 'GRANT' privilege on 'information_schema' to the MySQL user :
#					it'll work if the MySQL user has the 'SELECT' privilege on the selected database.
#
# COMMAND LINE :
#				check_mysql_db_size -H <mysqlHost> -u "<mysqlUser>" -p "<mysqlPassword>" -d '<dbName>' -w <warn> -c <crit> -v
#
# VERSION :		20130501
#
# TODO :
#	make POD-like doc
#	make a functions file to be used with 'check_mysql_user_nb_process'
########################################## ##########################################################

########################################## ##########################################################
# FUNCTIONS
########################################## ##########################################################
#---------------------
# Show the plugin help message.
# ARGUMENTS :	none
# RETURN : 		void
#---------------------
exitShowHelp() {
	cat << GLOUBIBOULGA
	FUNCTION:
		- return the size of the specified database in MB and alert accordingly

	USAGE:
		$0 -H <MySQL host> -u <MySQL user> -p <MySQL password> -d <database name> -w <warning> -c <critical>

	OPTIONS:
		-h	Show this help
		-H	MySQL host IP address or DNS name
		-u	MySQL username
		-p	MySQL password
		-d	database name
		-w	WARNING treshold, in megabytes
		-c	CRITICAL treshold, in megabytes
		-v	Verbose
GLOUBIBOULGA
	exit $STATE_UNKNOWN
	}


#---------------------
# Show (or not) the perfdata, return the exit code and leave script
# ARGUMENTS :
#	arg1 (STRING) :	output message
#	arg2 (STRING) : output perfdata
#	arg3 (INT) : 	exit code
#
# RETURN : void
#---------------------
exitPlugin() {
	outputMessage=$1;
	outputPerfdata=$2;
	exitCode=$3;

	echo "$1|$2"	# i.e. : "outputMessage|outputPerfdata"
	exit $exitCode
	}

# TODO : put this into common functions file. already defined in check_mysql_user_nb_process
removeFirstLineOfFile() {
	sed -i '1d' $1
	}

# TODO : put this into common functions file. already defined in check_mysql_user_nb_process
# $1 : line. Must be protected from inner spaces : use ""
# $2 : field number. Start at 0 or 1 ? TODO : Give details !
getFieldFromLine() {
	echo $1 | cut -d ' ' -f $2
	}

########################################## ##########################################################
# /FUNCTIONS
# CONFIG
########################################## ##########################################################
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4

OPT_VERBOSE=0

exitCode=$STATE_OK
pluginOutput='MySQL DB Size '
pluginPerfdata=''

tmpFile="./tmp.$$"

mysqlBin=$(which mysql)

########################################## ##########################################################
# /CONFIG
# USER INPUT VALIDATION
########################################## ##########################################################
while getopts 'hH:u:p:d:c:w:v' option;do	# http://man.cx/getopts
	case $option in
		h)
			exitShowHelp
			;;
		H)
			OPT_MYSQLHOST=$OPTARG
			;;
		u)
			OPT_MYSQLUSER=$OPTARG
			;;
		p)
			OPT_MYSQLPASSWORD=$OPTARG
			;;
		d)
			OPT_MYSQLDBNAME=$OPTARG
			;;
		c)
			OPT_CRITICAL=$OPTARG
			;;
		w)
			OPT_WARNING=$OPTARG
			;;
		v)
			OPT_VERBOSE=1
			;;
		?)
			exitShowHelp
			exit
			;;
	 esac
done

if [ $OPT_VERBOSE -eq 1 ]; then
	echo "[DEBUG] Options :
	OPT_MYSQLHOST :		$OPT_MYSQLHOST
	OPT_MYSQLUSER :		$OPT_MYSQLUSER
	OPT_MYSQLPASSWORD :	$OPT_MYSQLPASSWORD
	OPT_MYSQLDBNAME :	$OPT_MYSQLDBNAME
	OPT_CRITICAL :		$OPT_CRITICAL
	OPT_WARNING :		$OPT_WARNING
	OPT_VERBOSE :		$OPT_VERBOSE
	tmpFile :			$tmpFile"
fi

# checking options given to plugin
if [ -z $OPT_MYSQLDBNAME ]; then
	 exitPlugin '[ERROR] Please specify a database name.' '' 0 $STATE_UNKNOWN
fi
if [ -z $OPT_WARNING ] || [ -z $OPT_CRITICAL ]; then
	 exitPlugin '[ERROR] WARNING and CRITICAL parameters are mandatory.' '' 0 $STATE_UNKNOWN
fi

if [ $OPT_WARNING -gt $OPT_CRITICAL ]; then
	 exitPlugin '[ERROR] WARNING must be less than CRITICAL.' '' 0 $STATE_UNKNOWN
fi

########################################## ##########################################################
# GETTING METRICS
########################################## ##########################################################
mysqlQuery='SELECT table_schema AS dbName, ROUND(SUM( data_length + index_length ) / 1024 / 1024 ) AS dbSizeMb FROM information_schema.TABLES WHERE table_schema="'$OPT_MYSQLDBNAME'" GROUP BY table_schema;'

$mysqlBin -h $OPT_MYSQLHOST -u $OPT_MYSQLUSER -p"$OPT_MYSQLPASSWORD" -e "$mysqlQuery" > $tmpFile

# Creation of $tmpFile sometimes fails (?). Let's handle it !
[ -f $tmpFile ] || exitPlugin "$tmpFile not found" '' $STATE_UNKNOWN

removeFirstLineOfFile $tmpFile

# Extracting result
line=$(cat $tmpFile)
dbName=$(getFieldFromLine "$line" 1)
dbSizeMb=$(getFieldFromLine "$line" 2)

########################################## ##########################################################
# Cleaning
########################################## ##########################################################
[ -f $tmpFile ] && rm $tmpFile

########################################## ##########################################################
# OUTPUT STATUS + PERFDATA
########################################## ##########################################################
dbMessage="Database '$dbName' size ($dbSizeMb MB)"

if [ $OPT_WARNING -eq 0 ] && [ $OPT_CRITICAL -eq 0 ] ;then
	exitCode=$STATE_OK
	pluginOutput=$pluginOutput"NO WARN. $dbMessage"
elif [ $dbSizeMb -lt $OPT_WARNING ];then
	exitCode=$STATE_OK
	pluginOutput=$pluginOutput"OK : $dbMessage < Warning ($OPT_WARNING MB)"
elif [ $dbSizeMb -gt $OPT_CRITICAL ];then
	exitCode=$STATE_CRITICAL
	pluginOutput=$pluginOutput"CRITICAL : $dbMessage > Critical ($OPT_CRITICAL MB)"
elif [ $dbSizeMb -gt $OPT_WARNING ] && [ $dbSizeMb -lt $OPT_CRITICAL ] ;then
	exitCode=$STATE_WARNING
	pluginOutput=$pluginOutput"WARNING : Warning ($OPT_WARNING MB) < $dbMessage < Critical ($OPT_CRITICAL MB)"
fi

pluginPerfdata="dbSizeMb="$dbSizeMb"MB;$OPT_WARNING;$OPT_CRITICAL"
exitPlugin "$pluginOutput" "$pluginPerfdata" $exitCode

# perfdata format :
#	'label'=value[UOM];[warn];[crit];[min];[max]
# source : http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201

########################################## ##########################################################
# the end!
########################################## ##########################################################
